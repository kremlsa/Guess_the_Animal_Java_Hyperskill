# Default patterns for domain classes

animal.question=Is it {0}?

# Regular expression to return animal's name without any articles
# Default implementation returns data as is without any modification
animal.name.find=
animal.name.replace=

# The list of regular expressions to transform positive sentence to negative one.
# Every line is a rule consist of three parts separated by tabulation
# The the data matches the first part then replaceFirst performed and result returned.
# <if matches> <find pattern> <replace with>
statement.build.negative=\
it has.*\tit has (.*)\tIt doesn't have $1.\f\
it can.*\tit can (.*)\tIt can't $1.\f\
it is.*\tit is (.*)\tIt isn't $1.

statement.build.question=\
it has.*\tit has (.*)\tDoes it have $1?\f\
it can.*\tit can (.*)\tCan it $1?\f\
it is.*\tit is (.*)\tIs it $1?

# Regular expression to transform a statement to the fact about the animal
statement.fact.regex=(.*)

# The second part is string for MessageFormat. {0} - is name of animal
# This is a default implementation
statement.fact.animal={0} - $1


